from tools.nmap import nmap
from tools.gobuster import gobuster
from tools.nikto import nikto
from tools.sqlmap import sqlmap
from tools.ssh_bruteforce import ssh_bruteforce
from tools.ssh_login import ssh_login
from tools.wpscan import wpscan
from tools.ghostcat import ghostcat
from tools.shellshock import shellshock
from tools.spring4shell import spring4shell
from tools.log4shell import log4shell
from report import Report

class Framework:
    def __init__(self, ip, debug=False):
        self.ip = ip
        self.debug = debug
        self.gobuster_wordlist = "/usr/share/wordlist/dirb/small.txt"
        self.tools_output = dict()
        self.ports_open = []
        self.directory_list = []
        self.ssh_creds = {
            "username": "",
            "password": "",
        }


        self.report = Report()
        self.nmap = nmap(self.ip)
        self.gobuster = gobuster(self.ip, self.gobuster_wordlist)
        self.nikto = nikto(self.ip)
        self.sqlmap = sqlmap(self.ip, self.directory_list)
        self.ssh_bruteforce = ssh_bruteforce(self.ip)
        self.ssh_login = ssh_login(self.ip, self.ssh_creds["username"], self.ssh_creds["password"])
        self.wpscan = wpscan(self.ip)
        self.ghostcat = ghostcat(self.ip)
        self.shellshock = shellshock(self.ip)
        self.spring4shell = spring4shell(self.ip)
        self.log4shell = log4shell(self.ip)


    def run_nmap(self):
        if self.debug:
            print("Running nmap")
        nmap_output = self.nmap.run()
        self.tools_output["nmap"] = nmap_output
        self.ports_open = self.nmap.get_open_ports
        self.report.write_tool_output("nmap", nmap_output)
    
    def run_gobuster(self):
        gobuster_output = self.gobuster.run()
        self.tools_output["gobuster"] = gobuster_output
    
    def run_nikto(self):
        nikto_output = self.nikto.run()
        self.tools_output["nikto"] = nikto_output
    
    def run_sqlmap(self):
        sqlmap_output = self.sqlmap.run()
        self.tools_output["sqlmap"] = sqlmap_output
    
    def run_ssh_bruteforce(self):
        ssh_bruteforce_output = self.ssh_bruteforce.run()
        self.tools_output["ssh_bruteforce"] = ssh_bruteforce_output

    def run_ssh_login(self):
        ssh_login_output = self.ssh_login.run()
        self.tools_output["ssh_login"] = ssh_login_output

    def run_wpscan(self):
        wpscan_output = self.wpscan.run()
        self.tools_output["wpscan"] = wpscan_output

    def run_ghostcat(self):
        ghostcat_output = self.ghostcat.run()
        self.tools_output["ghostcat"] = ghostcat_output

    def run_shellshock(self):
        shellshock_output = self.shellshock.run()
        self.tools_output["shellshock"] = shellshock_output
    
    def run_spring4shell(self):
        spring4shell_output = self.spring4shell.run()
        self.tools_output["spring4shell"] = spring4shell_output

    def run_log4shell(self):
        log4shell_output = self.log4shell.run()
        self.tools_output["log4shell"] = log4shell_output
    
    def finish(self):
        self.report.save()
    


# MAIN
framework = Framework("10.10.191.54")
# framework.run_nmap()
# framework.run_gobuster()

# framework.run_ssh_bruteforce()
framework.run_ghostcat()
print(framework.tools_output)
# framework.report.generate_report(output)
framework.finish()