from .util import run_command
from ../generative import GenAi
class sqlmap:
    def __init__(self, ip, directory_list=[]):
        self.ip = ip
        self.directory_list = directory_list
        self.dbms='' #contains DBMS information
        self.database=[] #contains database information
        self.genai=GenAi()
        self.questions = [
            "List the DBMS software information",
            "List all databases",
            "List all tables that are not present by default",
            "List the table schema and the  data present in each table",
            "List all users and their privileges",
            "What would you rate the sensitivity of the data present (0 being the lowest and 10 being the highest)"
        ]
    
    # [{
    #     dbname: "",
    #     tables: [
    #         {
    #             table_name: "",
    #             row_list: [
    #                 ['col1_val', 'col2val'],
    #             ]
    #         },
    #     ]
    # }]
    def extract_features(self,data):
        query=["Return the DBMS software information","List of dictionaries containing database name which are not default or pre defined databases, tables in these database"]# and the content of each table"]
        return_format=['string containing the information','[{"dbname": name, "tables":[table1,...]}]']
         # return_format=['string containing the information','[user1,user2]','[{"dbname": name, "tables":{table_name:name,row_list:[[col1val,col2val....]]}]']
        soln1=self.genai.get(query[0],return_format[0],data)
        soln2=self.genai.get(query[1],return_format[1],data)
        if len(soln1)>0 && len(soln2)>0:
            self.dbms=soln1
            self.database=soln2
            return True
        else:
            return False
    def run(self):
        for directory_url in self.directory_list:
            # cmd = f"sqlmap -u http://{self.ip}/{directory}/"
            cmd = f"sqlmap --batch -v 0 -dbs -tables -u http://{directory_url}/"
            result = run_command(cmd)
            output = result['output']
            
            # Extract info
            print(output)
