from .util import run_command
import re
from ./genai/genai import GenAi
class nmap:
    def __init__(self, ip):
        self.ip = ip
        self.open_ports = []
        self.genai=GenAi()
    def extract_features(self, data):
        query="Return a list of dictionaries containing the following key value pairs: port open, service, and the version."
        return_format='[{"port":"number","service":"service_name","version":"service_version"}]'
        soln=self.genai.get(query,return_format,data)
        if len(soln)>0:
            self.open_ports=soln
            return True
        else:
            return False

    def get_open_ports(self, output):
        re_pattern_port = "([0-9]+)/tcp"
        ports = re.findall(re_pattern_port, output)
        self.open_ports = [int(port) for port in ports]

    def run(self):
        cmd = f"nmap -sT -A {self.ip}"
        result = run_command(cmd)
        print(result)

        output = result["output"]
        print(output)

        
        # print(f"Ports: {ports}")
        # return output

        features = self.extract_features(output)
        return result
    
    def get_open_ports(self):
        return self.open_ports
