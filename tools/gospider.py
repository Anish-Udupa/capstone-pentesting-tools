from .util import run_command
from .generative import GenAi
import ast
class gospider:
    def __init__(self, ip, directory_list):
        self.ip = ip
        self.urls=[]
        self.directory_list = directory_list
        self.genai=GenAi()

    def extract_features(self,data):
        query="Return a list of urls"
        return_format="['url1,url2,'...]"
        soln=self.genai.get(query,return_format,data)
        soln=ast.literal_eval(soln)
        if len(soln)>0:
            for url in soln:
                if url.startswith(f"http://{self.ip}"):
                    self.urls.append(url)
                elif (url.startswith("http://") or url.startswith("https://")):
                    continue    # Out of scope urls
                elif url.startswith("/"):
                    self.urls.append(f"http://{self.ip}{url}")
                else:
                    self.urls.append(f"http://{self.ip}/{url}")
            
            return True
        else:
            return False
        
    def get_urls(self):
        return self.urls
    
    def run(self):
        if len(self.directory_list) == 0:
            self.directory_list.append(f"http://{self.ip}/")
        for directory in self.directory_list:
            cmd = f"gospider -d 0 -s {directory}"
            result = run_command(cmd)
            print(result)

            features_success = False
            if result['status'] == 'success':
                features_success = self.extract_features(result['output'])
                
        if len(self.urls) > 0:
            result['status'] = 'success'
        else:
            result['status'] = 'failure' 
        return result
