from .util import run_command
from .generative import GenAi
import ast
class wpscan:
    def __init__(self, ip):
        self.ip = ip
        self.misconfig=[]
        self.genai=GenAi()
        
    def extract_features(self,data):
        query="Return a list of any severe vulnerability if present without the wpscan API token else return an empty list '[]'"
        return_format="[vulnerability1,vulnerability2,...]"
        soln=self.genai.get(query,return_format,data)
        soln=ast.literal_eval(soln)
        if len(soln)>0:
            self.misconfig=soln
            return True
        else:
            return False
    def run(self):
        cmd = f"wpscan --url http://{self.ip}"
        result = run_command(cmd)
        print(result)
        # Scrape output for knownn vulnerabilities
        # output = result['output']
        # print(output)

        print(result)

        features_success = False
        if result['status'] == 'success':
            output = result["output"]
            features_success = self.extract_features(output)
            
            if features_success is True:
                result['status'] = 'success'
            else:
                result['status'] = 'failure'
        return result
