import openai
import json
import ast
class GenAi:
    def __init__(self):
        openai.api_key=""
    def get(self,query,return_format,data):
        response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": "You are a pentration tester, who uses pentration testing tools and based on their outputs answer the questions"+data},
            {"role": "user", "content": query+". Return this in "+ return_format+" format. Do notadd any additional data"}
        ]
    )
        answer=response["choices"][0]["message"]["content"]
        while(response["choices"][0]["finish_reason"]=='length'):
            try:
                response = openai.ChatCompletion.create(
                model="gpt-3.5-turbo",
                messages=[
                    {"role": "system", "content": "You are a pentration tester, who uses pentration testing tools and based on their outputs answer the questions"+data},
                    {"role": "user", "content":query +" format: "+return_format },
                    {"role":"assistant","content":response["choices"][0]["message"]["content"][-100:]},
                    {"role":"user","content":"Finish the response from where you stopped for the previous query"}
                ]
            )
                answer+=response["choices"][0]["message"]["content"]
            except InvalidRequestError:
                answer="[]"
                
        return ast.literal_eval(answer)
